#!/usr/bin/env ruby

# Developed with Ruby 2.2.3
require 'json'
require 'pathname'
require 'ttfunk' # v1.4.0

# Extracts emoji images from OS X's emoji font.
#
# Credit: The majority of this script comes from the github/gemoji gem.
# https://github.com/github/gemoji/blob/be21f6e/lib/emoji/extractor.rb
module Emoji
  class Extractor
    EMOJI_TTF_PATH = "/System/Library/Fonts/Apple Color Emoji.ttf"
    EMOJI_JSON_PATH = File.expand_path("../../emoji-lookup.lbaction/Contents/vendor/emojilib/emojis.json", __FILE__)

    attr_reader :ttf, :size, :images_path

    def initialize(size, images_dir)
      @size = size
      @images_path = Pathname.new(images_dir)
      @ttf = TTFunk::File.open(Pathname.new(EMOJI_TTF_PATH))
    end

    def extract!
      ttf.maximum_profile.num_glyphs.times do |glyph_id|
        bitmap = extract_bitmap(glyph_id)
        next if bitmap.nil?

        ttf_name = ttf.postscript.glyph_for(glyph_id)
        hexes = ttf_name.split('_').map { |n| n.gsub(/^u/, '').downcase }

        if emoji_char_codes.include?(hexes.first.to_i(16))
          # When an emoji supports skin-tone modifiers, all variants--including
          # the unmodified "base" emoji--are suffixed with a "." + a number:
          # 0 for the base, then 1-5 which maps to Fitzpatrick types 2-6
          # (https://en.wikipedia.org/wiki/Fitzpatrick_scale). We remove the
          # base's suffix to fix its lookups.
          hexes.last.gsub!(/\.0$/, '')
          filename = "#{hexes.join('-')}.#{bitmap.type}"
          File.write(images_path.join(filename), bitmap.data.read)
        end
      end
    end

    private
      def extract_bitmap(glyph_id)
        bitmaps = ttf.sbix.all_bitmap_data_for(glyph_id)
        bitmaps.detect { |b| b.ppem == size }
      end

      def emoji_char_codes
        @emoji_char_codes ||= begin
          characters = emoji_dictionary.map { |_, metadata| metadata["char"] }.compact
          characters.map { |c| c.codepoints.first }
        end
      end

      def emoji_dictionary
        @emoji_dictionary ||=
          JSON.parse(File.read(Pathname.new(EMOJI_JSON_PATH)))
      end
  end
end

IMAGE_SIZE = 64
IMAGE_DIRECTORY = File.expand_path("../../emoji-lookup.lbaction/Contents/Resources/unicode", __FILE__)

Emoji::Extractor.new(IMAGE_SIZE, IMAGE_DIRECTORY).extract!
